name: 'Release'
on:
  push:
    # take no actions on push to any branch...
    branches-ignore:
      - '**'
    # ... only act on release tags
    tags:
      - 'v*'

env:
  GO_VERSION: "1.18.x"

jobs:
  wait-for-checks:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      # we don't want to release commits that have been pushed and tagged, but not necessarily merged onto main
      - name: Ensure tagged commit is on main
        run: |
          echo "Tag: ${GITHUB_REF##*/}"
          git fetch origin main
          git merge-base --is-ancestor ${GITHUB_REF##*/} origin/main && echo "${GITHUB_REF##*/} is a commit on main!"

      - name: Build snapshot artifacts
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: snapshot
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # This check name is defined as the github actions job name (in .github/workflows/acceptance-test.yaml)
          checkName: "Build-Snapshot-Artifacts"
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Check static analysis
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: static-analysis
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # This check name is defined as the github actions job name (in .github/workflows/acceptance-test.yaml)
          checkName: "Static-Analysis (1.x, ubuntu-latest)"
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Check unit, and integration test results
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: tests-unit-int
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # This check name is defined as the github actions job name (in .github/workflows/acceptance-test.yaml)
          checkName: "Tests (1.x, ubuntu-latest)"
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Check acceptance test results (helm v1.13.12)
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: acceptance-helm-1-13-12
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # This check name is defined as the github action job name + the kubernetes version (see below) (in .github/workflows/acceptance-test.yaml)
          checkName: "Acceptance-Helm (v1.13.12)"
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Check acceptance test results (helm v1.18.0)
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: acceptance-helm-1-18-0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # This check name is defined as the github action job name + the kubernetes version (see below) (in .github/workflows/acceptance-test.yaml)
          checkName: "Acceptance-Helm (v1.18.0)"
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Quality gate
        if: steps.static-analysis.outputs.conclusion != 'success' || steps.tests-unit-int.outputs.conclusion != 'success' || steps.snapshot.outputs.conclusion != 'success' || steps.acceptance-helm-1-13-12.outputs.conclusion != 'success' || steps.acceptance-helm-1-18-0.outputs.conclusion != 'success'
        run: |
          echo "Static-Analysis Status : ${{ steps.static-analysis.outputs.conclusion }}"
          echo "Unit/Integration Status : ${{ steps.tests-unit-int.outputs.conclusion }}"
          echo "Build Snapshot Artifacts Status: ${{ steps.snapshot.outputs.conclusion }}"
          echo "Acceptance Test (Helm v1.13.12) Status: ${{ steps.acceptance-helm-1-13-12.outputs.conclusion }}"
          echo "Acceptance Test (Helm v1.18.0) Status: ${{ steps.acceptance-helm-1-18-0.outputs.conclusion }}"
          false

  release:
    needs: [ wait-for-checks ]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore bootstrap cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ${{ github.workspace }}/.tmp
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('Makefile') }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('Makefile') }}-
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Bootstrap dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: make ci-bootstrap

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: ${{ secrets.NOQCKS_DOCKER_USER }}
          password: ${{ secrets.NOQCKS_DOCKER_PASS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.NOQCKS_GITHUB_TOKEN }}

      - name: Build snapshot artifacts
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: dist/**/*
